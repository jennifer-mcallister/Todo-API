type Todo {
	id: ID
	task: String
	description: String
	done: Boolean
}

type Ticket {
	id: ID
	title: String
	description: String
	type: TicketType
	priority: TicketPriority
	status: TicketStatus
}

enum TicketType {
	BUG
	NEW_FEATURE
	OTHER
}

enum TicketPriority {
	CRITICAL
	HIGH
	MEDIUM
	LOW
}

enum TicketStatus {
	NEW
	IN_DEVELOPMENT
	IN_REVIEW
	READY_FOR_TEST
	COMPLETED
}

type DeletedResourceResponse {
	deletedTodo: ID
	success: Boolean
}

type Query {
	getTodoById(id: ID!): Todo
	getAllTodos: [Todo]
}

type Mutation {
	createTodo(task: String!, description: String): Todo
	updateTodo(id: ID!, task: String!, description: String!, done: Boolean!): Todo
	deleteTodo(id: ID!): DeletedResourceResponse

	createTicket(input: CreateTicketInput!): Ticket
}

input CreateTicketInput {
	title: String!
	description: String
	type: TicketType!
	priority: TicketPriority
	status: TicketStatus
	todoId: ID!
}